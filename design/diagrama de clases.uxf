<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>10</x>
      <y>50</y>
      <w>350</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>tablon
--
id: int 
spaceId: 
name: string
user: Vector&lt;User&gt;
permission: binary
visibility: binary
targetUsers: Vector&lt;User&gt;
messages: Vector&lt;Message&gt;
--
get y set correspondientes
addMessageToTablon(msg);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>390</x>
      <y>60</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>permission:
0-local read
1-local write
2-remote read
3-remote write

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>390</x>
      <y>180</y>
      <w>310</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>visibility:
0-private (user group)
1-private (1 user)
2-public
3-super-public (anonymousUser)

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>390</x>
      <y>320</y>
      <w>360</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>targetUsers será:
-null cuando visibility sea 2 ó 3
-vector de tamaño = 1 cuando visibility sea 1
-vector de tamaño &gt; 1 cuando visibility sea 0

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>840</x>
      <y>500</y>
      <w>400</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>dataBaseManager
--
--
boolean checkUser(User user)
tablon getTablon(int tablonId)
message getMessage(int tablonId,
Message msgId)
addMessageToTablon(int tablonId,Message msg)
createTablon(Tablon tablon);
deleteTablon(int tablonId);
modifyTablon(int idTablon,Tablon tablon);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>1250</x>
      <y>540</y>
      <w>330</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Habría que pensar si es más rentable traer
todo el tablón o ya filtramos en el servidor
que 'tablón' es el que quiero (visibilidad
usuario)
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>570</y>
      <w>350</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>User
--
id: int 
name: 
surname1:
surname2:
author: Vector&lt;int&gt;
moderator: Vector&lt;int&gt;
permission: binary
--
get y sets correspondientes
Vector&lt;int&gt; isAuthor()
Vector &lt;int&gt; isModerator()
setModerator(int idTablon)
setAuthor(int idTablon)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>390</x>
      <y>570</y>
      <w>340</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>La figura del dueño del tablón se va a
distinguir, con un método en la clase
user isAuthor() que devuelve
un array de ids de tablon los cuales
es autor.
setAuthor indica que ese usuario es el autor
de dicho tablon
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>390</x>
      <y>720</y>
      <w>340</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Al igual con el autor, se puede saber que
un usuario es moderador de un/os tablon/es
isModerator() devuelve un array de enteros
que indican el identificador del tablon
del cual ese usuario modera.
setModerator indica que ese usuario es el
moderador de dicho tablon
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>880</x>
      <y>60</y>
      <w>450</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Message
--
id: int
creator: User
message: String
Image: BufferedImg		
SoundRecord: Sound...
VideoRecord: Video...
targetUsers: Vector&lt;User&gt;
visibility: binary
dateTime:
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1070</x>
      <y>220</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>870</x>
      <y>310</y>
      <w>460</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>GeneralInfoMessage
--
id: int
creator: User
message: String
Image: BufferedImg	
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
